[project]
name = "image_preprocessing"
version = "0.0.1"
description = "A snakemake workflow to preprocess a 3D single cell image dataset"
readme = "README.md"
authors = [
    { name = "Ritvik Vasan", email = "ritvik.vasan@alleninstitute.org" },
    {name = "Nick Gomez", email = "nick.gomez@alleninstitute.org"},
    {name = "Guilherme Pires", email = "guilherme.pires@alleninstitute.org"},
    {name = "Ryan Spangler", email = "ryan.spangler@alleninstitute.org"},
    {name = "Theo Knijnenburg", email = "theo.knijnenburg@alleninstitute.org"},
]
requires-python = "<3.11,>=3.8"
license = {file = "LICENSE"}
dependencies = [
    "torch-scatter>=2.1.2",
    "codecarbon>=2.4.2",
    "PyMCubes>=0.1.4",
    "copairs @ git+https://github.com/cytomining/copairs.git@880f22a551bd897896d148a0b07baa99d981c6a9",
    "pycytominer==1.2.0",
    "trimesh>=4.4.0",
    "pyvista>=0.43.8",
    "kaleido>=0.2.1,!=0.2.1.post1",  # kaleido 0.2.1.post1 is published incorrectly
    "pacmap>=0.7.2",
    "scipy>=1.9.3",
    "mitsuba>=3.5.0",
    "seaborn>=0.13.2",
    "plotly>=5.22.0",
    "cyto-dl[equiv,pcloud,s3,spharm,torchserve] @ git+https://github.com/AllenCellModeling/cyto-dl.git@a4a061d1808e0f94f906933642920142b581ba38",
    "torch==2.0.1",
    "torchvision==0.15.2",
    "pytorch-lightning",
    "monai-weekly",
    "numpy>=1.25.2",
    "mesh-to-sdf>=0.0.15",
    "pyopengl>=3.1.0",
    "pip",
    "ipython",
    "ipykernel>=6.29.5",
]

[project.urls]
Homepage = "https://github.com/AllenCell/benchmarking_representations"

[project.optional-dependencies]
build-requires = [
    "pdm-backend>=2.4.3",
    "numpy>=1.25.2",
    "pdm-pep517>=1.0.0",  # This is a build-time dependency of cyto-dl, required here because we instruct installation with --no-isolation
    "setuptools<74.0.0",  # New versions prevent numpy.distutils (now deprecated) from working, and py3nj installation depends on numpy.distutils
]
test = [
    "pytest>=8.3.3",
]
preprocessing = [
    "aicsimageio>=4.9.4",
    "numpy",
    "pandas",
    "universal-pathlib",
    "s3fs",
    "fsspec",
    "hydra-core",
    "snakemake",
    "scipy",
    "tqdm",
    "fastparquet",
    "plotly",
    "dash",
    "aicsshparam",
    "bfio",
    "zarr",
    "aiobotocore",
    "ome-zarr",
    "boto3",
    "multiprocessing-on-dill",
    "fire",
    "pulp",
]

[tool.pdm]
distribution = false

[[tool.pdm.source]]
url = "https://data.pyg.org/whl/torch-2.0.1+cu117.html"
verify_ssl = true
name = "torch"
type = "find_links"

[tool.pdm.scripts]
# The name "post_lock" is special: this command will run automatically after any invocation of `pdm lock`
post_lock = { shell = "pdm export -G build-requires --prod --no-default --no-hashes -o requirements1.txt && pdm export --prod -G preprocessing -G test --no-hashes -o requirements2.txt" }

[tool.pdm.options]
# Always install without any build isolation, to support torch-scatter and py3nj
sync = ["--no-isolation"]
install = ["--no-isolation"]

[tool.pdm.dev-dependencies]
dev = ["-e file:///${PROJECT_ROOT}/#egg=benchmarking-representations"]

[tool.pdm.build]
includes = ["image_preprocessing"]
excludes = ["**/*.pyc", "**/__pycache__"]
[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

